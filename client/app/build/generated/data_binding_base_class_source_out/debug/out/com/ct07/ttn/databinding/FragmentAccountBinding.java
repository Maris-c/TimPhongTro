// Generated by view binder compiler. Do not edit!
package com.ct07.ttn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ct07.ttn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAccountBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnAccount;

  @NonNull
  public final TextView btnFavorite;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final TextView btnManager;

  @NonNull
  public final TextView txtWellcome;

  private FragmentAccountBinding(@NonNull LinearLayout rootView, @NonNull TextView btnAccount,
      @NonNull TextView btnFavorite, @NonNull Button btnLogin, @NonNull Button btnLogout,
      @NonNull TextView btnManager, @NonNull TextView txtWellcome) {
    this.rootView = rootView;
    this.btnAccount = btnAccount;
    this.btnFavorite = btnFavorite;
    this.btnLogin = btnLogin;
    this.btnLogout = btnLogout;
    this.btnManager = btnManager;
    this.txtWellcome = txtWellcome;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAccount;
      TextView btnAccount = ViewBindings.findChildViewById(rootView, id);
      if (btnAccount == null) {
        break missingId;
      }

      id = R.id.btnFavorite;
      TextView btnFavorite = ViewBindings.findChildViewById(rootView, id);
      if (btnFavorite == null) {
        break missingId;
      }

      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btnLogout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btnManager;
      TextView btnManager = ViewBindings.findChildViewById(rootView, id);
      if (btnManager == null) {
        break missingId;
      }

      id = R.id.txtWellcome;
      TextView txtWellcome = ViewBindings.findChildViewById(rootView, id);
      if (txtWellcome == null) {
        break missingId;
      }

      return new FragmentAccountBinding((LinearLayout) rootView, btnAccount, btnFavorite, btnLogin,
          btnLogout, btnManager, txtWellcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
