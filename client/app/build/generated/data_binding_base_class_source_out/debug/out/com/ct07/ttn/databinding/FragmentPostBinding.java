// Generated by view binder compiler. Do not edit!
package com.ct07.ttn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ct07.ttn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPostBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView addAddress;

  @NonNull
  public final EditText addArea;

  @NonNull
  public final EditText addDeposits;

  @NonNull
  public final EditText addDescription;

  @NonNull
  public final ImageView addImage;

  @NonNull
  public final CheckBox addInterior;

  @NonNull
  public final EditText addPrice;

  @NonNull
  public final EditText addTitle;

  @NonNull
  public final ImageButton btnAddPost;

  @NonNull
  public final ItemAskLoginBinding itemAskLogin;

  @NonNull
  public final ProgressBar paginationProgressBar;

  @NonNull
  public final TextView txtInformation;

  @NonNull
  public final TextView txtPriceArea;

  @NonNull
  public final TextView txtTitleDescription;

  private FragmentPostBinding(@NonNull ScrollView rootView, @NonNull TextView addAddress,
      @NonNull EditText addArea, @NonNull EditText addDeposits, @NonNull EditText addDescription,
      @NonNull ImageView addImage, @NonNull CheckBox addInterior, @NonNull EditText addPrice,
      @NonNull EditText addTitle, @NonNull ImageButton btnAddPost,
      @NonNull ItemAskLoginBinding itemAskLogin, @NonNull ProgressBar paginationProgressBar,
      @NonNull TextView txtInformation, @NonNull TextView txtPriceArea,
      @NonNull TextView txtTitleDescription) {
    this.rootView = rootView;
    this.addAddress = addAddress;
    this.addArea = addArea;
    this.addDeposits = addDeposits;
    this.addDescription = addDescription;
    this.addImage = addImage;
    this.addInterior = addInterior;
    this.addPrice = addPrice;
    this.addTitle = addTitle;
    this.btnAddPost = btnAddPost;
    this.itemAskLogin = itemAskLogin;
    this.paginationProgressBar = paginationProgressBar;
    this.txtInformation = txtInformation;
    this.txtPriceArea = txtPriceArea;
    this.txtTitleDescription = txtTitleDescription;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addAddress;
      TextView addAddress = ViewBindings.findChildViewById(rootView, id);
      if (addAddress == null) {
        break missingId;
      }

      id = R.id.addArea;
      EditText addArea = ViewBindings.findChildViewById(rootView, id);
      if (addArea == null) {
        break missingId;
      }

      id = R.id.addDeposits;
      EditText addDeposits = ViewBindings.findChildViewById(rootView, id);
      if (addDeposits == null) {
        break missingId;
      }

      id = R.id.addDescription;
      EditText addDescription = ViewBindings.findChildViewById(rootView, id);
      if (addDescription == null) {
        break missingId;
      }

      id = R.id.addImage;
      ImageView addImage = ViewBindings.findChildViewById(rootView, id);
      if (addImage == null) {
        break missingId;
      }

      id = R.id.addInterior;
      CheckBox addInterior = ViewBindings.findChildViewById(rootView, id);
      if (addInterior == null) {
        break missingId;
      }

      id = R.id.addPrice;
      EditText addPrice = ViewBindings.findChildViewById(rootView, id);
      if (addPrice == null) {
        break missingId;
      }

      id = R.id.addTitle;
      EditText addTitle = ViewBindings.findChildViewById(rootView, id);
      if (addTitle == null) {
        break missingId;
      }

      id = R.id.btnAddPost;
      ImageButton btnAddPost = ViewBindings.findChildViewById(rootView, id);
      if (btnAddPost == null) {
        break missingId;
      }

      id = R.id.itemAskLogin;
      View itemAskLogin = ViewBindings.findChildViewById(rootView, id);
      if (itemAskLogin == null) {
        break missingId;
      }
      ItemAskLoginBinding binding_itemAskLogin = ItemAskLoginBinding.bind(itemAskLogin);

      id = R.id.paginationProgressBar;
      ProgressBar paginationProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (paginationProgressBar == null) {
        break missingId;
      }

      id = R.id.txtInformation;
      TextView txtInformation = ViewBindings.findChildViewById(rootView, id);
      if (txtInformation == null) {
        break missingId;
      }

      id = R.id.txtPriceArea;
      TextView txtPriceArea = ViewBindings.findChildViewById(rootView, id);
      if (txtPriceArea == null) {
        break missingId;
      }

      id = R.id.txtTitleDescription;
      TextView txtTitleDescription = ViewBindings.findChildViewById(rootView, id);
      if (txtTitleDescription == null) {
        break missingId;
      }

      return new FragmentPostBinding((ScrollView) rootView, addAddress, addArea, addDeposits,
          addDescription, addImage, addInterior, addPrice, addTitle, btnAddPost,
          binding_itemAskLogin, paginationProgressBar, txtInformation, txtPriceArea,
          txtTitleDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
