// Generated by view binder compiler. Do not edit!
package com.ct07.ttn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ct07.ttn.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRoomBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final FloatingActionButton phone;

  @NonNull
  public final TextView roomAddress;

  @NonNull
  public final TextView roomArea;

  @NonNull
  public final TextView roomAuthor;

  @NonNull
  public final TextView roomDateTime;

  @NonNull
  public final TextView roomDeposits;

  @NonNull
  public final TextView roomDescription;

  @NonNull
  public final ImageView roomImage;

  @NonNull
  public final TextView roomInterior;

  @NonNull
  public final TextView roomPrice;

  @NonNull
  public final TextView roomTitle;

  private FragmentRoomBinding(@NonNull ConstraintLayout rootView, @NonNull FloatingActionButton fab,
      @NonNull FloatingActionButton phone, @NonNull TextView roomAddress,
      @NonNull TextView roomArea, @NonNull TextView roomAuthor, @NonNull TextView roomDateTime,
      @NonNull TextView roomDeposits, @NonNull TextView roomDescription,
      @NonNull ImageView roomImage, @NonNull TextView roomInterior, @NonNull TextView roomPrice,
      @NonNull TextView roomTitle) {
    this.rootView = rootView;
    this.fab = fab;
    this.phone = phone;
    this.roomAddress = roomAddress;
    this.roomArea = roomArea;
    this.roomAuthor = roomAuthor;
    this.roomDateTime = roomDateTime;
    this.roomDeposits = roomDeposits;
    this.roomDescription = roomDescription;
    this.roomImage = roomImage;
    this.roomInterior = roomInterior;
    this.roomPrice = roomPrice;
    this.roomTitle = roomTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRoomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRoomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_room, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRoomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fab;
      FloatingActionButton fab = ViewBindings.findChildViewById(rootView, id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.phone;
      FloatingActionButton phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.roomAddress;
      TextView roomAddress = ViewBindings.findChildViewById(rootView, id);
      if (roomAddress == null) {
        break missingId;
      }

      id = R.id.roomArea;
      TextView roomArea = ViewBindings.findChildViewById(rootView, id);
      if (roomArea == null) {
        break missingId;
      }

      id = R.id.roomAuthor;
      TextView roomAuthor = ViewBindings.findChildViewById(rootView, id);
      if (roomAuthor == null) {
        break missingId;
      }

      id = R.id.roomDateTime;
      TextView roomDateTime = ViewBindings.findChildViewById(rootView, id);
      if (roomDateTime == null) {
        break missingId;
      }

      id = R.id.roomDeposits;
      TextView roomDeposits = ViewBindings.findChildViewById(rootView, id);
      if (roomDeposits == null) {
        break missingId;
      }

      id = R.id.roomDescription;
      TextView roomDescription = ViewBindings.findChildViewById(rootView, id);
      if (roomDescription == null) {
        break missingId;
      }

      id = R.id.roomImage;
      ImageView roomImage = ViewBindings.findChildViewById(rootView, id);
      if (roomImage == null) {
        break missingId;
      }

      id = R.id.roomInterior;
      TextView roomInterior = ViewBindings.findChildViewById(rootView, id);
      if (roomInterior == null) {
        break missingId;
      }

      id = R.id.roomPrice;
      TextView roomPrice = ViewBindings.findChildViewById(rootView, id);
      if (roomPrice == null) {
        break missingId;
      }

      id = R.id.roomTitle;
      TextView roomTitle = ViewBindings.findChildViewById(rootView, id);
      if (roomTitle == null) {
        break missingId;
      }

      return new FragmentRoomBinding((ConstraintLayout) rootView, fab, phone, roomAddress, roomArea,
          roomAuthor, roomDateTime, roomDeposits, roomDescription, roomImage, roomInterior,
          roomPrice, roomTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
