// Generated by view binder compiler. Do not edit!
package com.ct07.ttn.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ct07.ttn.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton deleteDistrict;

  @NonNull
  public final ImageButton deleteProvince;

  @NonNull
  public final ImageButton deleteWard;

  @NonNull
  public final ItemErrorBinding itemHeadlinesError;

  @NonNull
  public final ProgressBar paginationProgressBar;

  @NonNull
  public final RecyclerView recyclerHeadlines;

  @NonNull
  public final AutoCompleteTextView searchDistrict;

  @NonNull
  public final AutoCompleteTextView searchProvince;

  @NonNull
  public final AutoCompleteTextView searchWard;

  private FragmentSearchsBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton deleteDistrict, @NonNull ImageButton deleteProvince,
      @NonNull ImageButton deleteWard, @NonNull ItemErrorBinding itemHeadlinesError,
      @NonNull ProgressBar paginationProgressBar, @NonNull RecyclerView recyclerHeadlines,
      @NonNull AutoCompleteTextView searchDistrict, @NonNull AutoCompleteTextView searchProvince,
      @NonNull AutoCompleteTextView searchWard) {
    this.rootView = rootView;
    this.deleteDistrict = deleteDistrict;
    this.deleteProvince = deleteProvince;
    this.deleteWard = deleteWard;
    this.itemHeadlinesError = itemHeadlinesError;
    this.paginationProgressBar = paginationProgressBar;
    this.recyclerHeadlines = recyclerHeadlines;
    this.searchDistrict = searchDistrict;
    this.searchProvince = searchProvince;
    this.searchWard = searchWard;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_searchs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteDistrict;
      ImageButton deleteDistrict = ViewBindings.findChildViewById(rootView, id);
      if (deleteDistrict == null) {
        break missingId;
      }

      id = R.id.deleteProvince;
      ImageButton deleteProvince = ViewBindings.findChildViewById(rootView, id);
      if (deleteProvince == null) {
        break missingId;
      }

      id = R.id.deleteWard;
      ImageButton deleteWard = ViewBindings.findChildViewById(rootView, id);
      if (deleteWard == null) {
        break missingId;
      }

      id = R.id.itemHeadlinesError;
      View itemHeadlinesError = ViewBindings.findChildViewById(rootView, id);
      if (itemHeadlinesError == null) {
        break missingId;
      }
      ItemErrorBinding binding_itemHeadlinesError = ItemErrorBinding.bind(itemHeadlinesError);

      id = R.id.paginationProgressBar;
      ProgressBar paginationProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (paginationProgressBar == null) {
        break missingId;
      }

      id = R.id.recyclerHeadlines;
      RecyclerView recyclerHeadlines = ViewBindings.findChildViewById(rootView, id);
      if (recyclerHeadlines == null) {
        break missingId;
      }

      id = R.id.searchDistrict;
      AutoCompleteTextView searchDistrict = ViewBindings.findChildViewById(rootView, id);
      if (searchDistrict == null) {
        break missingId;
      }

      id = R.id.searchProvince;
      AutoCompleteTextView searchProvince = ViewBindings.findChildViewById(rootView, id);
      if (searchProvince == null) {
        break missingId;
      }

      id = R.id.searchWard;
      AutoCompleteTextView searchWard = ViewBindings.findChildViewById(rootView, id);
      if (searchWard == null) {
        break missingId;
      }

      return new FragmentSearchsBinding((LinearLayout) rootView, deleteDistrict, deleteProvince,
          deleteWard, binding_itemHeadlinesError, paginationProgressBar, recyclerHeadlines,
          searchDistrict, searchProvince, searchWard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
